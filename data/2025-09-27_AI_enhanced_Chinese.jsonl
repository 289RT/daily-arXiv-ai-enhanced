{"id": "2509.20542", "pdf": "https://arxiv.org/pdf/2509.20542", "abs": "https://arxiv.org/abs/2509.20542", "authors": ["Rujie Yin", "Yang Shen"], "title": "A Hierarchical Adaptive Diffusion Model for Flexible Protein-Protein Docking", "categories": ["cs.CE", "q-bio.BM"], "comment": null, "summary": "Structural prediction of protein-protein interactions is important to\nunderstand the molecular basis of cellular interactions, but it still faces\nmajor challenges when significant conformational changes are present. We\npropose a generative framework of hierarchical adaptive diffusion to improve\naccuracy and efficiency in such cases. It is hierarchical in separating global\ninter-protein rigid-body motions and local intra-protein flexibility in\ndiffusion processes, and the distinct local and global noise schedules are\ndesigned to mimic the induced-fit effect. It is adaptive in conditioning the\nlocal flexibility schedule on predicted levels of conformational change,\nallowing faster flexing for larger anticipated conformational changes.\nFurthermore, it couples the local and global diffusion processes through a\ncommon score and confidence network with sequence, evolution, structure, and\ndynamics features as inputs, and maintains rotational or translational\ninvariance or equivariance in outputs. It builds on our newly curated DIPS-AF\ndataset of nearly 39,000 examples for pre-training. Experiments on the\nindependent docking benchmark dataset DB5.5 show that our model outperforms an\nAlphaFold2-like iterative transformer (GeoDock) and a diffusion model\n(DiffDock-PP) in both rigid and flexible cases, with larger improvements in\nmore flexible cases. Ablation studies prove the importance of adaptive\nschedules, dynamics features, and pre-training. Additional analyses and case\nstudies reveal remaining gaps in sampling, scoring, and conformational\nresolution.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5206\u5c42\u81ea\u9002\u5e94\u6269\u6563\u751f\u6210\u6846\u67b6\uff0c\u7528\u4e8e\u63d0\u9ad8\u86cb\u767d\u8d28-\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u7ed3\u6784\u9884\u6d4b\u7684\u51c6\u786e\u6027\u548c\u6548\u7387\uff0c\u7279\u522b\u662f\u5728\u5b58\u5728\u663e\u8457\u6784\u8c61\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\u3002", "motivation": "\u7406\u89e3\u7ec6\u80de\u76f8\u4e92\u4f5c\u7528\u7684\u5206\u5b50\u57fa\u7840\u9700\u8981\u51c6\u786e\u7684\u86cb\u767d\u8d28-\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u7ed3\u6784\u9884\u6d4b\uff0c\u4f46\u5728\u5b58\u5728\u663e\u8457\u6784\u8c61\u53d8\u5316\u65f6\u4ecd\u9762\u4e34\u6311\u6218\u3002", "method": "\u901a\u8fc7\u5206\u5c42\u81ea\u9002\u5e94\u6269\u6563\u6846\u67b6\uff0c\u5206\u79bb\u5168\u5c40\u548c\u5c40\u90e8\u6784\u8c61\u53d8\u5316\uff0c\u5e76\u4f7f\u7528\u9884\u6d4b\u7684\u6784\u8c61\u53d8\u5316\u6c34\u5e73\u8c03\u6574\u5c40\u90e8\u7075\u6d3b\u6027\u8ba1\u5212\u3002", "result": "\u5728DB5.5\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u6a21\u578b\u5728\u521a\u6027\u548c\u67d4\u6027\u60c5\u51b5\u4e0b\u5747\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u4e14\u5728\u67d4\u6027\u60c5\u51b5\u4e0b\u6539\u8fdb\u66f4\u5927\u3002", "conclusion": "\u5206\u5c42\u81ea\u9002\u5e94\u6269\u6563\u6846\u67b6\u5728\u86cb\u767d\u8d28-\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u9884\u6d4b\u4e2d\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u4ecd\u5b58\u5728\u91c7\u6837\u3001\u8bc4\u5206\u548c\u6784\u8c61\u5206\u8fa8\u7387\u65b9\u9762\u7684\u6539\u8fdb\u7a7a\u95f4\u3002"}}
